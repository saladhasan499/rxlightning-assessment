{"ast":null,"code":"import { __rest, __assign } from './_virtual/_tslib.js';\nimport * as React from 'react';\nimport MuiSwitch from '@mui/material/Switch';\nimport invariant from 'tiny-warning';\nfunction fieldToSwitch(_a) {\n  var disabled = _a.disabled,\n    _b = _a.field,\n    fieldOnBlur = _b.onBlur,\n    field = __rest(_b, [\"onBlur\"]),\n    isSubmitting = _a.form.isSubmitting,\n    type = _a.type,\n    onBlur = _a.onBlur,\n    props = __rest(_a, [\"disabled\", \"field\", \"form\", \"type\", \"onBlur\"]);\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(type === 'checkbox', \"property type=checkbox is missing from field \" + field.name + \", this can caused unexpected behaviour\");\n  }\n  return __assign(__assign({\n    disabled: disabled !== null && disabled !== void 0 ? disabled : isSubmitting,\n    onBlur: onBlur !== null && onBlur !== void 0 ? onBlur : function (e) {\n      fieldOnBlur(e !== null && e !== void 0 ? e : field.name);\n    }\n  }, field), props);\n}\nfunction Switch(props) {\n  return React.createElement(MuiSwitch, __assign({}, fieldToSwitch(props)));\n}\nSwitch.displayName = 'FormikMaterialUISwitch';\nexport { Switch, fieldToSwitch };","map":{"version":3,"names":["fieldToSwitch","_a","disabled","_b","field","fieldOnBlur","onBlur","__rest","isSubmitting","form","type","props","process","env","NODE_ENV","invariant","name","__assign","e","Switch","React","createElement","MuiSwitch","displayName"],"sources":["/Users/salahhasan/Projects/senior-tech-assess/senior-tech-assess/senior-client/node_modules/formik-material-ui/src/Switch.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiSwitch, { SwitchProps as MuiSwitchProps } from '@mui/material/Switch';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport interface SwitchProps\n  extends FieldProps,\n    Omit<\n      MuiSwitchProps,\n      | 'checked'\n      | 'name'\n      | 'value'\n      | 'defaultChecked'\n      | 'form'\n      // Excluded for conflict with Field type\n      | 'type'\n    > {\n  type?: string;\n}\n\nexport function fieldToSwitch({\n  disabled,\n  field: { onBlur: fieldOnBlur, ...field },\n  form: { isSubmitting },\n  type,\n  onBlur,\n  ...props\n}: SwitchProps): MuiSwitchProps {\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      type === 'checkbox',\n      `property type=checkbox is missing from field ${field.name}, this can caused unexpected behaviour`\n    );\n  }\n\n  return {\n    disabled: disabled ?? isSubmitting,\n    onBlur:\n      onBlur ??\n      function (e) {\n        fieldOnBlur(e ?? field.name);\n      },\n    ...field,\n    ...props,\n  };\n}\n\nexport function Switch(props: SwitchProps) {\n  return <MuiSwitch {...fieldToSwitch(props)} />;\n}\n\nSwitch.displayName = 'FormikMaterialUISwitch';\n"],"mappings":";;;;SAoBgBA,aAAaA,CAACC,EAOhB;EANZ,IAAAC,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IACRC,EAAA,GAAAF,EAAA,CAAAG,KAAwC;IAAvBC,WAAW,GAAAF,EAAA,CAAAG,MAAA;IAAKF,KAAK,GAAAG,MAAA,CAAAJ,EAAA,EAA/B,UAAiC,CAAF;IAC9BK,YAAY,GAAAP,EAAA,CAAAQ,IAAA,CAAAD,YAAA;IACpBE,IAAI,GAAAT,EAAA,CAAAS,IAAA;IACJJ,MAAM,GAAAL,EAAA,CAAAK,MAAA;IACHK,KAAK,GAAAJ,MAAA,CAAAN,EAAA,EANoB,+CAO7B,CADS;EAER,IAAIW,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzCC,SAAS,CACPL,IAAI,KAAK,UAAU,EACnB,kDAAgDN,KAAK,CAACY,IAAI,2CAAwC,CACnG;;EAGH,OAAAC,QAAA,CAAAA,QAAA;IACEf,QAAQ,EAAEA,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIM,YAAY;IAClCF,MAAM,EACJA,MAAM,aAANA,MAAM,cAANA,MAAM,GACN,UAAUY,CAAC;MACTb,WAAW,CAACa,CAAC,aAADA,CAAC,cAADA,CAAC,GAAId,KAAK,CAACY,IAAI,CAAC;;EAC7B,GACAZ,KAAK,GACLO,KAAK;AAEZ;SAEgBQ,MAAMA,CAACR,KAAkB;EACvC,OAAOS,KAAA,CAAAC,aAAA,CAACC,SAAS,EAAAL,QAAA,KAAKjB,aAAa,CAACW,KAAK,CAAC,EAAI;AAChD;AAEAQ,MAAM,CAACI,WAAW,GAAG,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}