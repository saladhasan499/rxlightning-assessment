{"ast":null,"code":"var _jsxFileName = \"/Users/salahhasan/Projects/senior-tech-assess/senior-tech-assess/senior-client/src/components/AllPatients.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Accordion, AccordionSummary, AccordionDetails, Typography } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientData = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('https://localhost:7083/patients');\n      const data = await response.json();\n      setPatients(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: fetchData,\n      children: \"Fetch Patient Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Patient ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: patients.map(patient => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.patientId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 2,\n                children: /*#__PURE__*/_jsxDEV(Accordion, {\n                  children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                    expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 75\n                    }, this),\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: \"Click to view full patient details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                        children: JSON.stringify(patient, null, 2)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 62,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)]\n          }, patient.patientId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientData, \"gP/f30i9hS2MeVG+w9sXvtLidTA=\");\n_c = PatientData;\nexport default PatientData;\nvar _c;\n$RefreshReg$(_c, \"PatientData\");","map":{"version":3,"names":["React","useState","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","jsxDEV","_jsxDEV","PatientData","_s","patients","setPatients","fetchData","response","fetch","data","json","error","console","children","variant","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","component","style","marginTop","map","patient","Fragment","patientId","firstName","colSpan","expandIcon","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/salahhasan/Projects/senior-tech-assess/senior-tech-assess/senior-client/src/components/AllPatients.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Typography,\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nconst PatientData = () => {\n    const [patients, setPatients] = useState([]);\n\n    const fetchData = async () => {\n        try {\n            const response = await fetch('https://localhost:7083/patients');\n            const data = await response.json();\n            setPatients(data);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    return (\n        <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={fetchData}>\n                Fetch Patient Data\n      </Button>\n\n            <TableContainer component={Paper} style={{ marginTop: '20px' }}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Patient ID</TableCell>\n                            <TableCell>First Name</TableCell>\n                            {/* Add more table cells for other properties */}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {patients.map((patient) => (\n                            <React.Fragment key={patient.patientId}>\n                                <TableRow>\n                                    <TableCell>{patient.patientId}</TableCell>\n                                    <TableCell>{patient.firstName}</TableCell>\n                                    {/* Add more table cells for other properties */}\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell colSpan={2}>\n                                        <Accordion>\n                                            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                                                <Typography>Click to view full patient details</Typography>\n                                            </AccordionSummary>\n                                            <AccordionDetails>\n                                                <Typography>\n                                                    <pre>{JSON.stringify(patient, null, 2)}</pre>\n                                                </Typography>\n                                            </AccordionDetails>\n                                        </Accordion>\n                                    </TableCell>\n                                </TableRow>\n                            </React.Fragment>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    );\n};\n\nexport default PatientData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}