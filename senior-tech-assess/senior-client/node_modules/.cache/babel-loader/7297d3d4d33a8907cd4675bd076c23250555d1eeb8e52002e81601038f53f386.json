{"ast":null,"code":"import { __rest, __assign } from './_virtual/_tslib.js';\nimport * as React from 'react';\nimport MuiToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport invariant from 'tiny-warning';\nfunction fieldToToggleButtonGroup(_a) {\n  var _b = _a.field;\n  _b.onChange;\n  var fieldOnBlur = _b.onBlur,\n    field = __rest(_b, [\"onChange\", \"onBlur\"]),\n    type = _a.type,\n    onChange = _a.onChange,\n    onBlur = _a.onBlur,\n    form = _a.form,\n    props = __rest(_a, [\"field\", \"type\", \"onChange\", \"onBlur\", \"form\"]);\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(type === 'checkbox', \"property type=checkbox is missing from field \" + field.name + \", this can caused unexpected behaviour\");\n    if (!props.exclusive) {\n      invariant(Array.isArray(field.value), \"value for \" + field.name + \" is not an array, this can caused unexpected behaviour\");\n    }\n  }\n  return __assign(__assign({\n    onBlur: onBlur !== null && onBlur !== void 0 ? onBlur : function () {\n      fieldOnBlur(field.name);\n    },\n    onChange: onChange !== null && onChange !== void 0 ? onChange : function (_event, newValue) {\n      form.setFieldValue(field.name, newValue);\n    }\n  }, field), props);\n}\nfunction ToggleButtonGroup(props) {\n  return React.createElement(MuiToggleButtonGroup, __assign({}, fieldToToggleButtonGroup(props)));\n}\nToggleButtonGroup.displayName = 'FormikMaterialUIToggleButtonGroup';\nexport { ToggleButtonGroup, fieldToToggleButtonGroup };","map":{"version":3,"names":["fieldToToggleButtonGroup","_a","_b","field","onChange","fieldOnBlur","onBlur","__rest","type","form","props","process","env","NODE_ENV","invariant","name","exclusive","Array","isArray","value","__assign","_event","newValue","setFieldValue","ToggleButtonGroup","React","createElement","MuiToggleButtonGroup","displayName"],"sources":["/Users/salahhasan/Projects/senior-tech-assess/senior-tech-assess/senior-client/node_modules/formik-material-ui/src/ToggleButtonGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiToggleButtonGroup, {\n  ToggleButtonGroupProps as MuiToggleButtonGroupProps,\n} from '@mui/material/ToggleButtonGroup';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport interface ToggleButtonGroupProps\n  extends FieldProps,\n    Omit<MuiToggleButtonGroupProps, 'name' | 'value' | 'error'> {\n  type?: string;\n}\n\nexport function fieldToToggleButtonGroup({\n  field: { onChange: _onChange, onBlur: fieldOnBlur, ...field },\n  type,\n  onChange,\n  onBlur,\n  form,\n  ...props\n}: ToggleButtonGroupProps): MuiToggleButtonGroupProps {\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      type === 'checkbox',\n      `property type=checkbox is missing from field ${field.name}, this can caused unexpected behaviour`\n    );\n\n    if (!props.exclusive) {\n      invariant(\n        Array.isArray(field.value),\n        `value for ${field.name} is not an array, this can caused unexpected behaviour`\n      );\n    }\n  }\n\n  return {\n    onBlur:\n      onBlur ??\n      function () {\n        fieldOnBlur(field.name);\n      },\n    onChange:\n      onChange ??\n      function (_event, newValue) {\n        form.setFieldValue(field.name, newValue);\n      },\n    ...field,\n    ...props,\n  };\n}\n\nexport function ToggleButtonGroup(props: ToggleButtonGroupProps) {\n  return <MuiToggleButtonGroup {...fieldToToggleButtonGroup(props)} />;\n}\n\nToggleButtonGroup.displayName = 'FormikMaterialUIToggleButtonGroup';\n"],"mappings":";;;;SAagBA,wBAAwBA,CAACC,EAOhB;MANvBC,EAAA,GAAAD,EAAA,CAAAE,KAA6D;EAAAD,EAAA,CAAAE,QAAjC;EAAA,IAAUC,WAAW,GAAAH,EAAA,CAAAI,MAAA;IAAKH,KAAK,GAAAI,MAAA,CAAAL,EAAA,EAApD,sBAAsD,CAAF;IAC3DM,IAAI,GAAAP,EAAA,CAAAO,IAAA;IACJJ,QAAQ,GAAAH,EAAA,CAAAG,QAAA;IACRE,MAAM,GAAAL,EAAA,CAAAK,MAAA;IACNG,IAAI,GAAAR,EAAA,CAAAQ,IAAA;IACDC,KAAK,GAAAH,MAAA,CAAAN,EAAA,EAN+B,+CAOxC;EACC,IAAIU,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzCC,SAAS,CACPN,IAAI,KAAK,UAAU,EACnB,kDAAgDL,KAAK,CAACY,IAAI,2CAAwC,CACnG;IAED,IAAI,CAACL,KAAK,CAACM,SAAS,EAAE;MACpBF,SAAS,CACPG,KAAK,CAACC,OAAO,CAACf,KAAK,CAACgB,KAAK,CAAC,EAC1B,eAAahB,KAAK,CAACY,IAAI,2DAAwD,CAChF;;;EAIL,OAAAK,QAAA,CAAAA,QAAA;IACEd,MAAM,EACJA,MAAM,aAANA,MAAM,cAANA,MAAM,GACN;MACED,WAAW,CAACF,KAAK,CAACY,IAAI,CAAC;KACxB;IACHX,QAAQ,EACNA,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GACR,UAAUiB,MAAM,EAAEC,QAAQ;MACxBb,IAAI,CAACc,aAAa,CAACpB,KAAK,CAACY,IAAI,EAAEO,QAAQ,CAAC;;EACzC,GACAnB,KAAK,GACLO,KAAK;AAEZ;SAEgBc,iBAAiBA,CAACd,KAA6B;EAC7D,OAAOe,KAAA,CAAAC,aAAA,CAACC,oBAAoB,EAAAP,QAAA,KAAKpB,wBAAwB,CAACU,KAAK,CAAC,EAAI;AACtE;AAEAc,iBAAiB,CAACI,WAAW,GAAG,mCAAmC"},"metadata":{},"sourceType":"module","externalDependencies":[]}